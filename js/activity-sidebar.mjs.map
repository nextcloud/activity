{"version":3,"mappings":";2KAAA,MAAeA,EAAA,sICaf,IAAIC,EAAoC,KACpCC,EAAsC,KACtCC,EAAuE,KAE3E,MAAMC,EAAc,IAAI,IAAI,MAAM,QAAQ,IAAI,CAC7C,GAAI,WACJ,KAAMC,EAAE,WAAY,UAAU,EAC9B,QAASC,EAET,MAAM,MAAMC,EAAIC,EAAU,CAEzB,GAAIP,IAAoB,KAAM,CAC7B,KAAM,CAAE,QAASQ,CAAA,EAAgB,MAAMC,EAAA,wBAAAD,CAAA,OAAO,0CAAyB,iBAAAA,CAAA,uDACrDR,EAAAQ,CAAA,CAGfP,GACHA,EAAe,QAAQ,EAExBA,EAAiBS,EAAUV,CAAe,EAEpBE,EAAAD,EAAe,MAAMK,CAAE,EAC7CJ,EAAoB,OAAOK,CAAQ,CACpC,EACA,OAAOA,EAAU,CAChBL,EAAqB,OAAOK,CAAQ,CACrC,EACA,SAAU,CACTN,GAAgB,QAAQ,EACPA,EAAA,KAEnB,CAAC,EAED,OAAO,iBAAiB,mBAAoB,gBAAiB,CAC5D,GAAI,IAAI,OAAS,IAAI,MAAM,QAAS,CAC/B,UAAM,QAAQ,YAAYE,CAAW,EACzC,KAAM,CAAE,QAASK,CAAA,EAAgB,MAAAC,EAAA,wBAAAD,CAAA,OAAM,QAAO,kCAAyB,iBAAAA,CAAA,uDACrDR,EAAAQ,CAAA,CAEpB,CAAC","names":["lightningBoltSVG","LazyActivityTab","activityTabApp","activityTabInstance","activityTab","t","LightningBolt","el","fileInfo","ActivityTab","__vitePreload","createApp"],"ignoreList":[0],"sources":["../node_modules/@mdi/svg/svg/lightning-bolt.svg?raw","../src/sidebar.ts"],"sourcesContent":["export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" id=\\\"mdi-lightning-bolt\\\" viewBox=\\\"0 0 24 24\\\"><path d=\\\"M11 15H6L13 1V9H18L11 23V15Z\\\" /></svg>\"","/**\n * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport type { App, Component, ComponentPublicInstance } from 'vue'\nimport type { ActivityTabType } from './views/ActivityTab.vue'\n\nimport LightningBolt from '@mdi/svg/svg/lightning-bolt.svg?raw'\nimport { translate as t } from '@nextcloud/l10n'\nimport { createApp } from 'vue'\n\n// Init Activity tab component\nlet LazyActivityTab: Component | null = null\nlet activityTabApp: App<Element> | null = null\nlet activityTabInstance: ComponentPublicInstance<ActivityTabType> | null = null\n\nconst activityTab = new OCA.Files.Sidebar.Tab({\n\tid: 'activity',\n\tname: t('activity', 'Activity'),\n\ticonSvg: LightningBolt,\n\n\tasync mount(el, fileInfo) {\n\t\t// only load if needed\n\t\tif (LazyActivityTab === null) {\n\t\t\tconst { default: ActivityTab } = await import('./views/ActivityTab.vue')\n\t\t\tLazyActivityTab = ActivityTab\n\t\t}\n\t\t// destroy previous instance if available\n\t\tif (activityTabApp) {\n\t\t\tactivityTabApp.unmount()\n\t\t}\n\t\tactivityTabApp = createApp(LazyActivityTab)\n\t\t// No need to await this, we will show a loading indicator instead\n\t\tactivityTabInstance = activityTabApp.mount(el)\n\t\tactivityTabInstance.update(fileInfo)\n\t},\n\tupdate(fileInfo) {\n\t\tactivityTabInstance!.update(fileInfo)\n\t},\n\tdestroy() {\n\t\tactivityTabApp?.unmount()\n\t\tactivityTabApp = null\n\t},\n})\n\nwindow.addEventListener('DOMContentLoaded', async function() {\n\tif (OCA.Files && OCA.Files.Sidebar) {\n\t\tOCA.Files.Sidebar.registerTab(activityTab)\n\t\tconst { default: ActivityTab } = await import('./views/ActivityTab.vue')\n\t\tLazyActivityTab = ActivityTab\n\t}\n})\n"],"file":"js/activity-sidebar.mjs"}